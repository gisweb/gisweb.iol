<tal:block tal:define="
    portal_state context/@@plone_portal_state;
    portal_url portal_state/portal_url;
    fieldname python:options['fieldname'];
    baseURL python: context.getParentDatabase().absolute_url();

                       v options/fieldvalue;
                       id options/fieldname;
                       title python:options['field'].title;
                       ttip_title title;
                       ttip_descr python:options['field'].Schema()['fieldDescription'].getAccessor(options['field'])();
                       custom_attributes python:options['field'].Schema()['customAttributes'].getAccessor(options['field'])();
                       data python:options['field'].getSettings().tojson(v);
                       rendered_data python:options['field'].getSettings().tojson(v, rendered=False);
                       formname python:options['field'].getParentNode().id;
                       associated_form python:options['field'].getSettings().associated_form;
                       field python:options['field'];">
                           
<!-- VEDERE DI SPOSTARLO SUL FOM ALTRIMENTI COSI METTO UNA SOLA MAPPA -->                       
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&libraries=drawing"></script> 
<script type="text/javascript" tal:attributes="src string:${portal_url}/controller.googleMaps.js"></script>                        

<script charset="utf-8" type="text/javascript">  
//TODO passare le configurazione da custom attributes
    
jQuery.plominoMaps.drawingManager = new google.maps.drawing.DrawingManager({
  //drawingMode: google.maps.drawing.OverlayType.MARKER,
  drawingControl: false,
  drawingControlOptions: {
    position: google.maps.ControlPosition.TOP_CENTER,
    drawingModes: [
      google.maps.drawing.OverlayType.MARKER,
      google.maps.drawing.OverlayType.CIRCLE,
      google.maps.drawing.OverlayType.POLYGON,
      google.maps.drawing.OverlayType.POLYLINE,
      google.maps.drawing.OverlayType.RECTANGLE
    ]
  },

  circleOptions: {
    fillColor: '#ffff00',
    fillOpacity: 1,
    strokeWeight: 5,
    clickable: false,
    zIndex: 1,
    editable: true
  }
});
    
    

</script>   
                           
                           
                           

        <script type="text/javascript" charset="utf-8"
        	tal:define="param python:field.getSettings().getParameters();"
        	tal:content="structure string:
                var ${fieldname}_datatable;
                var windowWidth = 800;
                var windowHeight = 400;
                var newGeom=false;
        		jq(document).ready(function() {

		        	${fieldname}_datatable = jq('#${fieldname}_datagrid').dataTable( {
		        		'aaData': ${rendered_data},
		        		'bJQueryUI': false,
                        ${param},
                        'iconPath': '${baseURL}/resources/icons/',
                        'editMode':true,
                        'fieldId':'${fieldname}',
		        		'fnDrawCallback': function() {

                            jq('#${fieldname}_editrow').addClass('disabled');
                            jq('#${fieldname}_deleterow').addClass('disabled');
		        			jq('#${fieldname}_datagrid > tbody > tr').click(function() {
                                datagrid_deselect_rows(${fieldname}_datatable);
                               
                                if(${fieldname}_datatable.fnGetData().length>0){
		        				    jq(this).addClass('datagrid_row_selected');
                                    jq('#${fieldname}_editrow').removeClass('disabled');
                                    jq('#${fieldname}_deleterow').removeClass('disabled');

                                    var marker = jQuery.plominoMaps.google.points[${fieldname}_datatable.fnGetPosition(this)];
                                    jQuery.plominoMaps.google.zoomTo(marker);
                                    marker.map.infowindow.setContent(marker.title);
                                    marker.map.infowindow.open(marker.map, marker); 
                                }
                                
		        			});
		        		},

                        'fnCreatedRow': function( nRow, aData, iDataIndex ) { 

                            if(typeof(newGeom)=='object'){
                                 var conf = this.fnSettings().oInit;

                                 var options = {
                                        icon:'${baseURL}/resources/icons/' + aData[conf.iconIndex],
                                        iconh:null,
                                        iconw:null,
                                        dataTable:this,
                                        editmode:conf.editMode,
                                        fieldId:conf.fieldId,
                                        //action: options.action,
                                        rowIndex:iDataIndex,
                                        geomIndex:conf.geomIndex,
                                        latIndex:conf.latIndex,
                                        lngIndex:conf.lngIndex,
                                        title:aData[conf.titleIndex],
                                        pos:[newGeom.getPosition().lat(),newGeom.getPosition().lng()],
                                   }


                     
                                newGeom.setMap(null)
                                jQuery.plominoMaps.updateGeometryField(options); 
                                jQuery.plominoMaps.google.addMarker(options);

                            }
    
                        },
        				'oLanguage': {
        					'sUrl': '@@collective.js.datatables.translation'
						}
		        	} );
                    //Aggiorno la mappa con gli elementi in tabella
                    jQuery.plominoMaps.google.updateMap(${fieldname}_datatable);

        			jq('#${fieldname}_editrow').click(function() {
                        //var rowIndex = ${fieldname}_datatable.fnGetPosition(datagrid_get_selected_row(${fieldname}_datatable)); 
                        //var marker = jQuery.plominoMaps.google.points[rowIndex];
                        //var scoord = '';
                        //if(marker) scoord = '&lat=' + marker.getPosition.lat() + '&lng=' + marker.getPosition.lng();
        				datagrid_edit_row(${fieldname}_datatable, '${fieldname}', '../${associated_form}/OpenBareForm?Plomino_Parent_Field=${fieldname}&Plomino_Parent_Form=${formname}');return false;
        			});

        			jq('#${fieldname}_deleterow').button({'label':'Elimina'}).click(function() {
                        var rowIndex = ${fieldname}_datatable.fnGetPosition(datagrid_get_selected_row(${fieldname}_datatable));
                        jQuery.plominoMaps.google.removeMarker(rowIndex);
                        datagrid_delete_row(${fieldname}_datatable, '${fieldname}');
                        return false;
        			});

        			var s = ${fieldname}_datatable.fnSettings();
                      if(s.oInit.winW) windowWidth=s.oInit.winW;
                       if(s.oInit.winH) windowHeight =s.oInit.winH;
        			
                        jq('#${fieldname}_editform').dialog(
                       { 
                         'autoOpen': false, 
                          'modal': true, 
                          'width': windowWidth, 
                          'height': windowHeight,
                          close: function(event, ui){setTimeout(function(){if(newGeom) newGeom.setMap(null);},1000)} 
                        });
        		

                     google.maps.event.addListener(jQuery.plominoMaps.drawingManager, 'overlaycomplete', function(e) {
                            jQuery.plominoMaps.drawingManager.setDrawingMode(null);
                            jQuery('#drawingManagerTools').removeClass('active');
                            newGeom=e.overlay;
                          
                           datagrid_add_row(${fieldname}_datatable, '${fieldname}', '../${associated_form}/OpenBareForm?Plomino_Parent_Field=${fieldname}&Plomino_Parent_Form=${formname}&lat=' + newGeom.getPosition().lat().toFixed(6) + '&lng='+newGeom.getPosition().lng().toFixed(6));

                    
                       
                    });


} );">
        </script>
                           
    <div class="row-fluid">
        
        <div class="span8"><label class="control-label">
            <span  tal:content="python:'%s: ' % title">Titolo</span>
            <i tal:condition="ttip_descr" class="icon-info-sign" data-fade-speed="10" data-trigger="hover" tal:attributes="title ttip_title;data-content ttip_descr"></i>
            </label></div>
        
        <div class="span4">
            <button  type="button" class="btn span12" data-toggle="button" id="drawingManagerTools"><i class="icon-map-marker"></i> Aggiungi punto in mappa</button></div>
    </div>                 
        <!--MAPPA--> 
        <style tal:content="structure string:#${fieldname}_gmap img {max-width: none}"></style>
        <div class="row-fluid">                 
        <div class="span12" tal:content='structure string:<div id="${fieldname}_gmap" ${custom_attributes}></div>'/>
        <!--<div class="span4" id="streetview" style="height: 300px;"></div>   -->
        </div>
                           
        <table class="table table-striped table-bordered" tal:attributes="id string:${fieldname}_datagrid">
        </table>
        <div tal:attributes="id string:${fieldname}_editform"></div>
                           
        <div class="btn-group">       
  
          <button class="btn disabled" tal:attributes="id string:${fieldname}_editrow;">Modifica</button>
 
          <button class="btn disabled" tal:attributes="id string:${fieldname}_deleterow;">Elimina</button>
        </div>  
                                      
        <input type='hidden' tal:attributes="id string:${fieldname}_gridvalue;
                                     name fieldname;
                                     value data"/>
                           
        <input type='hidden' tal:attributes="id string:${fieldname}_settings;
                                     name string:${fieldname}_settings;"/>                   

</tal:block>