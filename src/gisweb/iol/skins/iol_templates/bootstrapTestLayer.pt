<tal:def tal:define="
    size python:options['field'].getSettings('size') or str(3);
    w python: str(int(size)*60);
    title python:options['field'].title;
    ttip_title title;
    ttip_descr python:options['field'].Schema()['fieldDescription'].getAccessor(options['field'])();
    id options/fieldname;
    widget python:options['field'].getSettings('widget');
    custom_attributes python:options['field'].Schema()['customAttributes'].getAccessor(options['field'])();
    custom_js python:options['field'].Schema()['custom_js'].getAccessor(options['field'])();
    selection options/selection;">
         <h4>
            <span tal:content="title">Titolo</span>
            <i tal:condition="ttip_title" class="icon-info-sign" tal:attributes="title ttip_title;data-content ttip_descr"></i>
        </h4>

        <tal:widget tal:condition="python:test(widget=='SELECT')">
            <select tal:attributes="name options/fieldname;
                                    id options/fieldname;
                                    class string:span12">
                <tal:loop tal:repeat="v selection">
                    <option tal:define="current options/fieldvalue;l python:v.split('|')"
                    tal:attributes="value python:l[1]; selected python:test(current==l[1],1,0)"
                    tal:content="python:l[0]">value</option>
                </tal:loop>
            </select>
        </tal:widget>
        <tal:widget tal:condition="python:test(widget=='MULTISELECT')">
            <select tal:attributes="name options/fieldname;
                                    class cls_name" multiple="multiple" lines="4">
                <tal:loop tal:repeat="v selection">
                    <tal:block tal:define="current options/fieldvalue;
                                        currentaslist python:test(hasattr(current, 'append'), current, [current]);
                                        l python:v.split('|')">
                        <option tal:attributes="value python:l[1]; selected python:test(currentaslist and l[1] in currentaslist,1,0)"
                        tal:content="python:l[0]">value</option>
                    </tal:block>
                </tal:loop>
            </select>
        </tal:widget>
        <tal:widget tal:condition="python:test(widget=='CHECKBOX')">
            <tal:block tal:define="current options/fieldvalue;
                                currentaslist python:test(hasattr(current, 'append'), current, [current]);"
            tal:repeat="v selection">
                <tal:block tal:define="l python:v.split('|')">
                    
                    <label class="checkbox" tal:attributes="for python:options['fieldname'] + '-' + l[1];">
                        <input type="checkbox" tal:attributes="name options/fieldname;
                                value python:l[1];
                                checked python:test(currentaslist and l[1] in currentaslist,1,0);
                                id python:options['fieldname'] + '-' + l[1]">
                        <tag tal:replace="python:l[0]"></tag>
                    </label>
                    
                    <tal:sep tal:condition="not:repeat/v/end" tal:content="structure python:options['field'].getSettings('separator')">separator</tal:sep>
                </tal:block>
            </tal:block>
        </tal:widget>
        <tal:widget tal:condition="python:test(widget=='RADIO')">
            <tal:block tal:define="current options/fieldvalue;
                                currentaslist python:test(hasattr(current, 'append'), current, [current]);"
            tal:repeat="v selection">
                <tal:block tal:define="l python:v.split('|');primo repeat/v/start">
                
                    <label class="radio" tal:attributes="for python:options['fieldname'] + '-' + l[1];">
                        <input type="radio" tal:attributes="name options/fieldname;
                            value python:l[1];
                            checked python:test(currentaslist and l[1] in currentaslist,1,primo);
                            id python:options['fieldname'] + '-' + l[1]" />
                        <tag tal:replace="python:l[0]"></tag>
                        
                    </label>
                    <tal:sep tal:condition="not:repeat/v/end" tal:content="structure python:options['field'].getSettings('separator')">separator</tal:sep>
                    
                </tal:block> 
                
            </tal:block>
        </tal:widget>
        <script type="text/javascript" charset="utf-8" tal:content="structure string:
        jq(document).ready(function () {
                     

          });">
        </script>
        
       <script type="text/javascript">
        jq(document).ready(function () {
                     

             var osmMapType = new google.maps.ImageMapType({
                    getTileUrl: function (coord, zoom) {
                        return "http://tile.openstreetmap.org/" +
		            zoom + "/" + coord.x + "/" + coord.y + ".png";
                    },
                    tileSize: new google.maps.Size(256, 256),
                    isPng: true,
                    alt: "OpenStreetMap",
                    name: "OSM",
                    maxZoom: 19
                });
        


             var map = jq.plominoMaps.gMaps["cartelli_mappa"];
           map.mapTypeControlOptions =  {
                mapTypeIds: ['OSM', google.maps.MapTypeId.ROADMAP, google.maps.MapTypeId.SATELLITE, google.maps.MapTypeId.HYBRID, google.maps.MapTypeId.TERRAIN];

             map.mapTypes.set('OSM', osmMapType);




          });
        </script>  
        
        
        
</tal:def>