<span tal:define="widget python:options['field'].getSettings('widget');
		selection python:options['selection'];
		name python:options['fieldname'];
        fieldname name;
        title python:options['field'].title;
        ttip_title title;
        ttip_descr python:options['field'].Schema()['fieldDescription'].getAccessor(options['field'])();
        custom_attributes python:options['field'].Schema()['customAttributes'].getAccessor(options['field'])();
		current python:options['fieldvalue'];
		lcurrent python:test(hasattr(current,'split'),[current],current);
		lcurrent_ids python:[p.split('/')[-1] for p in lcurrent];
		">
                      
	<tal:widget tal:condition="python:test(widget=='DYNAMICTABLE')"
		tal:define="

    portal_state context/@@plone_portal_state;
    portal_url portal_state/portal_url;
     fieldid options/field/id;
     baseURL python: context.getParentDatabase().absolute_url();
     doc python: context.REQUEST.PARENTS[0];
     docId python:doc.isDocument() and doc.getId();
     showLink python:0 if doc.isDocument() and not doc.checkIolPermission('edit') or doc.isEditMode() else 1;
     editMode python:1 if not doc.isDocument() or doc.isEditMode() else 0;			
            data selection;
	    	cols python:options['field'].getSettings().getJQueryColumns();
	    	params python:options['field'].getSettings('dynamictableparam');
	    	selected python:'|'.join(lcurrent_ids+lcurrent);
	    	">

                        
        <script type='text/javascript' tal:content="structure string:
            var ${fieldname}_datatable;
    
			jq(document).ready(function() {
                var aData = ${data};
                for(i=0;i<aData.length;i++){
                    aData[i] = eval(aData[i].substring(1))
                };

			    ${fieldname}_datatable = jq('#${fieldname}_datagrid').dataTable( {
			        'aaData': aData,
			        'bJQueryUI': false,
                    ${params},
                     'fnDrawCallback': function() {
                            jq('#${fieldname}_editrow').addClass('disabled');
                            jq('#${fieldname}_deleterow').addClass('disabled');
                            jq('#${fieldname}_datagrid > tbody > tr').click(function() {
                                datagrid_deselect_rows(${fieldname}_datatable);
                                jq(this).addClass('datagrid_row_selected');
                                if(${fieldname}_datatable.fnGetData().length>0){
                                    var rowData = ${fieldname}_datatable.fnGetData(${fieldname}_datatable.fnGetPosition(this));
		                    jq(this).addClass('datagrid_row_selected');
                                    jq('#${fieldname}_editrow').removeClass('disabled');
                                    jq('#${fieldname}_deleterow').removeClass('disabled');
                                }


                            });
                       },
                        'aoColumnDefs': [
         {
            'aTargets': ['_all'],
            'bUseRendered': false,
            'fnRender': function (oObj) {
                var cell = oObj.aData[oObj.iDataColumn];
                var dburl='${baseURL}';
                if(oObj.iDataColumn==0){
                   if(${showLink}) 
                         return '<a href=\'' + dburl + '/' + oObj.aData[0] + '/EditDocument\' class=\'icon-edit\'></a>';
                   else  
                         return null
                }
                else if(${showLink} && oObj.iDataColumn==1){
                   return '<a href=\'' + dburl + '/' + oObj.aData[0] + '\' class=\'viewlink\'>' + cell + '</a>';
                }
                else {
                    return cell
                }
            }
                
        },    
        { 'aTargets': [0], 'bSearchable': false, 'bSortable': false, 'sWidth': '0' , 'bVisible':true }                      

                        ],
                                
       				'oLanguage': {
       					'sUrl': '@@collective.js.datatables.translation'
					}
			        
			    });

		

        		jq('#${fieldname}_addrow').click(function() {
                        if($.plominoFormChanged && !confirm('Attenzione: le modifiche sul form andranno perse, continuare?')) return false;
                        var editUrl = '${baseURL}/' + ${fieldname}_datatable.fnSettings().oInit.editForm;
                        window.location=editUrl+'/OpenForm?parentDocument=${docId}&parentField=${fieldname}';
                        return false;
        			});
        			jq('#${fieldname}_editrow').click(function() {
                        var row = datagrid_get_selected_row(${fieldname}_datatable);
                        var rowIndex = ${fieldname}_datatable.fnGetPosition(row);
                        var id = ${fieldname}_datatable.fnGetData(rowIndex,0);
                        window.location='${baseURL}/'+id+'/EditDocument';   
                        return false;

        			});
        			jq('#${fieldname}_deleterow').button({'label':'Elimina'}).click(function() {
                        if(confirm('Sicuro di voler cancellare questo elemento ?')){
                            var row = datagrid_get_selected_row(${fieldname}_datatable);
                            var rowIndex = ${fieldname}_datatable.fnGetPosition(row);
                            var id = ${fieldname}_datatable.fnGetData(rowIndex,0);
                            window.location='${baseURL}/plomino_documents/'+id+'/delete?returnurl=${baseURL}/plomino_documents/${docId}';
                        }
                            return false;
        			});

        		});">
         </script>
                        
        <label class="control-label"><span tal:content="python:'%s: ' % title">Titolo</span>
            <i tal:condition="ttip_descr" class="icon-info-sign" data-fade-speed="10" data-trigger="hover" tal:attributes="title ttip_title;data-content ttip_descr"></i>
        </label>  
        
        <table class="table table-bordered" tal:attributes="id string:${fieldname}_datagrid"></table>          
   <!--
        <div class="btn-group" tal:condition="python:doc.isDocument() and doc.isEditMode()">      
          <button class="btn" tal:attributes="id string:${fieldname}_addrow;">Aggiungi</button>
          <button class="btn disabled" tal:attributes="id string:${fieldname}_editrow;">Modifica</button>
          <button class="btn disabled" tal:attributes="id string:${fieldname}_deleterow;">Elimina</button>
        </div>                 
   --> 
        <!--<div style="clear: both"></div>-->
        <input type="hidden" tal:attributes="name options/fieldname; id string:${name};
                                          value python:test(current is not None,'|'.join(current),'')"/>
    </tal:widget>
                    

</span>