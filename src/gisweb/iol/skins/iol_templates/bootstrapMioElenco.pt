<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
    xmlns:tal="http://xml.zope.org/namespaces/tal"
    xmlns:metal="http://xml.zope.org/namespaces/metal"
    xmlns:i18n="http://xml.zope.org/namespaces/i18n" lang="en"
    metal:use-macro="here/plomino_main_template/macros/master" i18n:domain="CMFPlomino">
        
<body>
    
<metal:block
    fill-slot="top_slot"
    tal:define="is_designer python:here.hasDesignPermission()">
    <tal:notdesigner tal:condition="not:is_designer">
    <tal:hide
        tal:condition="not:is_designer"
        tal:define="dummy python:request.set('disable_border', 1);" />
    </tal:notdesigner>
</metal:block>

<metal:main fill-slot="main">
    <tal:main-macro
        metal:define-macro="main"
        tal:define="kssClassesView context/@@kss_field_decorator_view;
                    getKssClasses nocall:kssClassesView/getKssClassesInlineEditable;
                    templateId template/getId;">
                        
 <!-- <script src="../resources/controller.form.plominodocument.js"></script>-->
 <script src="../resources/jquery.dataTables.rowGrouping.js"></script>
                    
         
<link media="screen" href="../resources/docs.css" type="text/css" rel="stylesheet">                  
                        
            

        <div
            tal:replace="structure provider:plone.abovecontenttitle" /><tal:block
            tal:define="myF python:here;
                        b myF/ActionBarPosition|nothing;
                        hasReadPermission python:test(
                            here.hasReadPermission(here)==True and
                            here.hasReadPermission(here.getParentDatabase())==True)">
   
            <tal:block
                tal:condition="python:test(hasReadPermission==True)">
                <tal:block
                    tal:define="owner python:myF"
                    tal:condition="python:test((b and myF.ActionBarPosition=='BOTTOM'), False, True)">
                    <span metal:use-macro="here/ActionBar/macros/ViewActionBar">
                    display view actions </span>
                </tal:block>
            </tal:block>

            <h1 class="documentFirstHeading" tal:content="here/Title">view title</h1>
            <div tal:replace="structure provider:plone.belowcontenttitle" />
            <p tal:content="here/Description" class="documentDescription">description</p>


            <tal:block
                tal:condition="python:test(hasReadPermission==True)"
                tal:define="requiredwidget here/REQUEST/widget|nothing;
                            viewwidget python:requiredwidget == 'BASIC' and requiredwidget or here.getWidget();">

                <div tal:replace="structure provider:plone.abovecontentbody" />

                <tal:basic tal:condition="python:viewwidget == 'BASIC'">
                    DEFINIRE UNA ALTERNATIVA IN CASO DI WIDGET BASIC - vedere elenco forms                     
                </tal:basic>
             
                <tal:dynamic tal:condition="python:viewwidget == 'DYNAMICTABLE'">
	
                    <script type="text/javascript" charset="utf-8"
                        tal:define="iscategorized python:getattr(here, 'Categorized', False);
                                    db python: here.getParentDatabase();
                                    currentUserId python: db.getCurrentUser().getMemberId();
                                    params here/DynamicTableParameters|nothing;
                                    categorized python:iscategorized and 'true' or 'false';
                                    destinationForm here/REQUEST/destinationForm|nothing;
                                    fixedsorting python:iscategorized and '\'aaSortingFixed\': [[1, \'asc\']],' or '';
                                    fixedcol1size python:iscategorized and '{ \'aTargets\': [1], \'sWidth\': \'0\' },' or '';"
                        tal:content="structure string:
                                     var oDynamicTable;
                                     var base_query={'owner':'${currentUserId}'};
                                     jq(document).ready(function() {

                                        oDynamicTable = jq('#dynamictable').dataTable( {


                                            'aaSorting': [],
                                            'bPaginate': true,
                                            'bLengthChange': true,
                                            'bFilter': true,
                                            'sAjaxSource': 'search_json',    
                                            'bServerSide': true,
                                            'iDisplayLength': -1,
                                            'bSort': true,
                                            'bInfo': true,
                                            'bAutoWidth': false,
                                            'bJQueryUI': false,
                                            'bProcessing': true,
                                            'aLengthMenu': [[5,10, 25, 50,100,-1], [5,10, 25, 50,100, 'Tutti']],
                                            'sDom': 'lfr<\'giveHeight\'t>ip' ,                 
                                            'searchForm':'search_base',
                                            'aoColumnDefszzz': [
                                                    {
                                                        'mRender': function ( data, type, row ) {

                                                            console.log(data)

                                                            return data ;
                                                        },
                                                        'aTargets': [ 0 ]
                                                    },
                                                    { 'bVisible': false,  'aTargets': [ 3 ] },
                                                    { 'sClass': 'center', 'aTargets': [ 4 ] }

                                     
                                                ],


                                       'aoColumnDefs': [
                                                    { 'aTargets': ['_all'],
                                                      'bUseRendered': false,
                                                      'fnRender': function (oObj) {
                                                            var cell = oObj.aData[oObj.iDataColumn];
                                                            if (oObj.iDataColumn > 0) {
                                                                if (findInArray(cell, '<a') == -1) {
                                                                    return '<a href=\'../${destinationForm}/OpenForm?parentDocument=' + oObj.aData[0] + '\' class=\'viewlink\'>' + cell + '</a>';
                                                                }
                                                                else
                                                                    return cell;
                                                            }
                                                            else {
                                                                return '<input disabled=disabled type=\'checkbox\' value=\'' + oObj.aData[0] + '\' />';
                                                            }
                                                         }

                                                    },
                                                    ${fixedcol1size}
                                                    { 'aTargets': [0], 'bSearchable': false, 'bSortable': false, 'sWidth': '0' }
                                                ],
                                                ${fixedsorting}
                                                'fnDrawCallbackww': function() {
                                                    if (${categorized}) {
                                                        dynamicview_categorize('dynamictable');
                                                    }
                                                },

		'fnDrawCallbackxx': function ( oSettings ) {
			if ( oSettings.aiDisplay.length == 0 )
			{
				return;
			}
			
			var nTrs = jq('#dynamictable tbody tr');
			var iColspan = nTrs[0].getElementsByTagName('td').length;
			var sLastGroup = '';
			for ( var i=0 ; i<nTrs.length ; i++ )
			{
				var iDisplayIndex = oSettings._iDisplayStart + i;
				var sGroup = oSettings.aoData[ oSettings.aiDisplay[iDisplayIndex] ]._aData[1];
				if ( sGroup != sLastGroup )
				{
					var nGroup = document.createElement( 'tr' );
					var nCell = document.createElement( 'td' );
					nCell.colSpan = iColspan;
					nCell.className = 'group';
					nCell.innerHTML = sGroup;
					nGroup.appendChild( nCell );
					nTrs[i].parentNode.insertBefore( nGroup, nTrs[i] );
					sLastGroup = sGroup;
				}
			}
		},



                                                'fnServerData': function( sSource, aoData, fnCallback) {

                                                            var form_query = jq('#' + oSettings.oInit.searchForm).serializeZopeQuery();

                                                            aoData.push({name:'query', value: JSON.stringify(jq.extend({}, base_query, form_query))});

                                                            jq.getJSON( sSource, aoData, function (json) { 
                                                            /* Do whatever additional processing you want on the callback, then tell DataTables */
                                                           

fnCallback(json)
                                                        } );
                                                },

                                                //'fnFooterCallback': generateTableFooter,
                                                'oLanguage': {
                                                    'sUrl': '@@collective.js.datatables.translation'
                                                }
                                            });

                                            //oDynamicTable.rowGrouping({ GroupingColumnIndex:1})
                                            var oSettings = oDynamicTable.fnSettings(); 
                                            console.log(oSettings.oInit.searchForm)

                                            var tableNodes = oDynamicTable.fnGetNodes();
                                            jq('td > input:checkbox', tableNodes).change(function() {
                                                jq(this).closest('tr').toggleClass('row_selected');
                                            });


                                            jq('#' + oSettings.oInit.searchForm + ' .dynamicSearch').change(function() {

                                                     oDynamicTable.fnClearTable();
                                                     


                                               



                                              });
                                              






                                        });">
                    </script>
                    <div>La MIA VISTA</div>
                    <table class="display" id="dynamictable" tal:define="cols here/getColumns">
                        <thead>
                            <tr>
                                <th></th>
                                <tal:block tal:repeat="col cols">
                                    <th tal:condition="not: col/HiddenColumn|nothing"
                                        tal:content="col/Title"
                                        tal:attributes="class python:getattr(col, 'DisplaySum') and 'displaysum' or ''"></th>
                                </tal:block>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <tal:block tal:repeat="col cols">
                                    <th tal:condition="not: col/HiddenColumn|nothing"></th>
                                </tal:block>
                            </tr>
                        </tfoot>
                        <tbody></tbody>
                    </table>

                </tal:dynamic>

                <tal:block
                    tal:define="owner python:myF"
                    tal:condition="python:test((b and myF.ActionBarPosition!='TOP'),True, False)">

                    <span metal:use-macro="here/ActionBar/macros/ViewActionBar">
                    display view actions </span>
                </tal:block>
            </tal:block>
            
               
            <tal:block tal:condition="python:not(hasReadPermission==True)">
                <p i18n:translate="Please log in">Please log in</p>
            </tal:block>
                
           
        </tal:block>

        <div tal:replace="structure provider:plone.belowcontentbody" />
    </tal:main-macro>

</metal:main>
</body>
</html>