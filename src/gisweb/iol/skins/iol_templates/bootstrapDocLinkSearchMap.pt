<div tal:on-error="structure container/handleError">
<tal:block 
    define="field python:options['field'];
            fieldname python:options['fieldname'];	
	    dburl python:context.aq_parent.absolute_url();
            sourceview python: options['field'].getSettings('sourceview');
            cols python: options['field'].getSettings().getJQueryColumns();
            destForm python: context.REQUEST.get('destinationForm','');
            custom_attributes python:options['field'].Schema()['customAttributes'].getAccessor(options['field'])();
            v options/fieldvalue;
            baseURL python: context.getParentDatabase().absolute_url();">
            
                
    <input type="hidden" id="destinationForm" tal:attributes="value destForm"/>
    <script type="text/javascript" charset="utf-8"
	    tal:define="param python: field.getSettings('dynamictableparam');"
            tal:content="structure string:
                var ${fieldname}_datatable;

                $$(document).ready(function() {
                    var newObject,obj;
	            var overlays = [];

                    ${fieldname}_datatable = $$('#${fieldname}_datatable').dataTable( {
			'aoColumns': ${cols},
                        'sAjaxSource':'${dburl}/${sourceview}/search_json',
						'aoColumnDefs': [
							{
							'aTargets': ['_all'],


                  'fnCreatedCell': function (nTd, sData, oData, iRow, iCol) {
                    if ( iCol == 1 ) {
                      $(nTd).css('color', 'red')
                    }
                    if (iCol == oData.length-1){
                       var v = sData.split(' ');  
                       if(parseFloat(v[1])){
                           $(nTd).bind('click',function(e){
                               e.preventDefault();
                               zoomOnMarker(iRow)
                               return false
                           })
                           $(nTd).html('<i class=\'icon-zoom-in\'></i></span><span style=\'white-space:nowrap;margin-left:10px\'>lat: ' + parseFloat(v[1]).toFixed(2) + ' lng: ' + parseFloat(v[0]).toFixed(2)) + '</span>'
                        }
                    }
                  }

						
				    },
				{ 'aTargets': [0], 'bSearchable': false, 'bSortable': false, 'sWidth': '0' }
		         ],
                        'bJQueryUI': false,
                        ${param},

                        'fnDrawCallback': function() {
                            $$('#${fieldname}_datatable> tbody > tr').click(function() {

                                if(${fieldname}_datatable.fnGetData().length == 0) return;
                                datagrid_deselect_rows(${fieldname}_datatable);

                                $$.each(overlays,function(index,overlay){
                                    if(overlay.geometryType == google.maps.drawing.OverlayType.MARKER){
                                        overlay.setDraggable(false);
                                        if(overlay.tmpIcon) overlay.setIcon(overlay.tmpIcon);
                                    }
                                    else{
                                        overlay.setEditable(false);
                                        if(overlay.tmpColor) overlay.setOptions({'strokeColor':overlay.tmpColor});
                                    }
                                });

                                $$(this).addClass('datagrid_row_selected');
                                $$('#${fieldname}_editrow').attr('disabled',false);
                                $$('#${fieldname}_deleterow').attr('disabled',false);
                                obj = overlays[${fieldname}_datatable.fnGetPosition(this)];

                                if(obj.geometryType == google.maps.drawing.OverlayType.MARKER){
                                    obj.setDraggable(editMode);
                                    obj.tmpIcon = obj.getIcon();
                                    obj.setIcon('selezionato.png');
                                    obj.map.setCenter(obj.getPosition());
                                    obj.map.setZoom(18);
                                    obj.map.infowindow.setContent('todo:inserire info del cantiere...');
                                    obj.map.infowindow.setPosition(obj.getPosition());  
                                    obj.map.infowindow.open(obj.map)

                                }
                                else{
                                    obj.setEditable(editMode);
                                    obj.tmpColor = obj.strokeColor;
                                    obj.setOptions({'strokeColor':'#FFFF00'});
                                    var bounds = obj.getBounds();
                                    obj.map.fitBounds(bounds);
                                    obj.map.infowindow.setContent('todo:inserire info dello scavo...');
                                    obj.map.infowindow.setPosition(bounds.getCenter());  
                                    obj.map.infowindow.open(obj.map);
                                }                                    
                                
                            });


        markerClusterer = new MarkerClusterer($$.plominoMaps.google.map, overlays, {
          maxZoom: 10,
          gridSize: 50
        });


                        },

                        'fnCreatedRow': function( nRow, aData, iDataIndex ) {
                            editMode=false;
                            //prima di inserire la proma riga tolgo i marker dalla mappa
                            if(iDataIndex == 0){
                                $$.each(overlays,function(index,overlay){
                                     if(overlay) overlay.setMap(null)
                                });
                                overlays = [];

                            }

                            var options = this.fnSettings().oInit;
                            if(options.geomIndex == 'undefined') options.geomIndex = aData.length-1;
                            if(options.typeIndex == 'undefined') options.typeIndex = aData.length-2;

                            if(newObject){ 
                                newObject.saved = true;
                                newObject.editMode = editMode;
                                newObject.fieldId = '${fieldname}';
                                newObject.rowIndex = iDataIndex;
                                newObject.dataTable = ${fieldname}_datatable;
                                newObject.geomIndex = options.geomIndex;
                                newObject.typeIndex = options.typeIndex;
                                newObject.lngIndex = options.lngIndex;
                                newObject.latIndex = options.latIndex;
                                overlays[iDataIndex] = newObject;
                                $$.plominoMaps.registerObject(newObject);
                            }
                            else{
                                var sGeom = aData[aData.length-1];
                                var elementType = aData[aData.length-2];//chiave del tipo di elemento 

                                if(sGeom && sGeom != '&nbsp;'){
                                    var editMode = editMode;
if(options.drawingOptions[elementType]) options.drawingOptions[elementType].markerOptions.title = 'Pratica:' + aData[1] + ' ' + aData[2];
                                    overlays[iDataIndex] = $$.plominoMaps.addObject(sGeom,options.drawingOptions[elementType]); 
                                    if(!overlays[iDataIndex]) return;
                                    overlays[iDataIndex].editMode = editMode;
                                    overlays[iDataIndex].fieldId = '${fieldname}';
                                    overlays[iDataIndex].rowIndex = iDataIndex;
                                    overlays[iDataIndex].dataTable = ${fieldname}_datatable;
                                    overlays[iDataIndex].geomIndex = options.geomIndex;
                                    overlays[iDataIndex].typeIndex = options.typeIndex;
                                    overlays[iDataIndex].lngIndex = options.lngIndex;
                                    overlays[iDataIndex].latIndex = options.latIndex;
                                    //$$.plominoMaps.registerObject(overlays[iDataIndex]);
                                    google.maps.event.addListener(overlays[iDataIndex],'click', function(){
                                        
                                        window.location = '${baseURL}/' + aData[0]

                                    })


                                }
                           }

                        },

                        'oLanguage': {
                            'sUrl': '@@collective.js.datatables.translation'
                        }
                    } );
							
							
				
function zoomOnMarker(rowIndex) {


                                $$.each(overlays,function(index,overlay){
                                    if(overlay){
                                        if(overlay.geometryType == google.maps.drawing.OverlayType.MARKER){
                                            overlay.setDraggable(false);
                                            if(overlay.tmpIcon) overlay.setIcon(overlay.tmpIcon);
                                        }
                                        else{
                                            overlay.setEditable(false);
                                            if(overlay.tmpColor) overlay.setOptions({'strokeColor':overlay.tmpColor});
                                        }
                                    }
                                });
                     


                            obj = overlays[rowIndex];
                            if(obj){



                                if(obj.geometryType == google.maps.drawing.OverlayType.MARKER){
                                    //obj.setDraggable(editMode);
                                    obj.tmpIcon = obj.getIcon();
                                    obj.setIcon('selezionato.png');
                                    obj.map.setCenter(obj.getPosition());
                                    obj.map.setZoom(16);
                                    //obj.map.infowindow.setContent('todo:inserire info del cantiere...');
                                    //obj.map.infowindow.setPosition(obj.getPosition());  
                                    //obj.map.infowindow.open(obj.map)

                                }
                                else{
                                    obj.setEditable(editMode);
                                    obj.tmpColor = obj.strokeColor;
                                    obj.setOptions({'strokeColor':'#FFFF00'});
                                    var bounds = obj.getBounds();
                                    obj.map.fitBounds(bounds);
                                    //obj.map.infowindow.setContent('todo:inserire info dello scavo...');
                                    //obj.map.infowindow.setPosition(bounds.getCenter());  
                                    //obj.map.infowindow.open(obj.map);
                                }      
                            }
                                
};






            plominoSearchTables.push('${fieldname}_datatable');
        } );">
        </script>
      
   <!--MAPPA--> 
        <div tal:attributes="
            id fieldname;
            data-base-url baseURL;
            data-value v;
            class string: googlemap-plugin;
            data-plugin-options custom_attributes;"></div>

        <table class="table table-striped table-bordered" data-plugin="datatables" tal:attributes="id string:${fieldname}_datatable"></table>

       <div tal:attributes="id string:${fieldname}_messageinfo;class string:control-label uneditable hidden;"></div>
       <input type='hidden' style="width:100%" tal:attributes="id string:${fieldname}_geometry;name string:${fieldname};value v"/>   
 
                           
</tal:block>
</div>