<tal:block tal:define="fieldname python:options['fieldname'];
                       v options/fieldvalue;
                       title python:options['field'].title;
    ttip_title title;
    ttip_descr python:options['field'].Schema()['fieldDescription'].getAccessor(options['field'])();   
                       data python:options['field'].getSettings().tojson(v);
                       rendered_data python:options['field'].getSettings().tojson(v, rendered=True);
                       formname python:options['field'].getParentNode().id;
                       associated_form python:options['field'].getSettings().associated_form;
                       custom_attributes python:options['field'].Schema()['customAttributes'].getAccessor(options['field'])();
                       baseURL python: context.getParentDatabase().resources.absolute_url();
                       popupsize python:customAttributes or 'width:600px';
                       field python:options['field'];">
                                                          
                           
       <script type="text/javascript" charset="utf-8"
        	tal:define="param python:field.getSettings().getParameters();"
        	tal:content="structure string:
                var ${fieldname}_datatable;
                var windowWidth = 800;
                var windowHeight = 300;
                var newGeom,selGeom;
                var features = [];
                var wktPlugin;
                var rowAdded = false;
                var openUrl = '../${associated_form}/OpenBareForm?Plomino_Parent_Field=${fieldname}&Plomino_Parent_Form=${formname}';

        		jq(document).ready(function() {
		        	${fieldname}_datatable = jq('#${fieldname}_datagrid').dataTable( {
		        		'aaData': ${rendered_data},
		        		'bJQueryUI': true,
		        		${param},
		        		'fnDrawCallback': function() {
		        			jq('#${fieldname}_datagrid > tbody > tr').click(function() {
		        				datagrid_deselect_rows(${fieldname}_datatable);
		        				jq(this).addClass('datagrid_row_selected');
                                selectGeometry(${fieldname}_datatable.fnGetPosition(this));

		        			});
		        		},
                        'fnCreatedRow': function( nRow, aData, iDataIndex ) { 
                            if(newGeom){
                                newGeom.fid = iDataIndex + 1;
                                updateDatagridGeom(newGeom.geometry.toString(),'${fieldname}',iDataIndex);
                            }
    
                        },

                        click: function(){
                                console.log(this)
                            
                        },


        				'oLanguage': {
        					'sUrl': '@@collective.js.datatables.translation'
						}
		        	} );
        	
        			jq('#${fieldname}_editrow').button({'label':'Modifica'}).click(function() {
        				datagrid_edit_row(${fieldname}_datatable, '${fieldname}', this.href);
        			});
        			jq('#${fieldname}_deleterow').button({'label':'Elimina'}).click(function() {
                        var currentRow = ${fieldname}_datatable.fnGetPosition(datagrid_get_selected_row(${fieldname}_datatable));
                        var currenFeature = wktPlugin.vectorLayer.features[currentRow];
                        //wktPlugin.modifyControl.unselectFeature(currenFeature);
                        wktPlugin.vectorLayer.destroyFeatures(currenFeature);
        				datagrid_delete_row(${fieldname}_datatable, '${fieldname}');
        			});
                    
                    jq('#${fieldname}_editform').dialog(
                        { 'autoOpen': false, 
                          'modal': true, 
                            'width': windowWidth, 
                            'height': windowHeight, 
                            close: function(event, ui){setTimeout(function(){if(newGeom.fid == null) newGeom.destroy();},1000)} 
                        });

        		} );


var InitMap = function(mapPanel){

    wktPlugin = mapPanel.gcTools['gc_wktedit'];
    var aData = ${fieldname}_datatable.fnGetData()
    for(idx in aData){  
        var id=parseInt(idx);
        var data = aData[id];
        var geom = data[data.length-1];

        if(geom){		
            var feature = wktPlugin.format.read(geom);
            if (feature){
                feature.fid = id;
                wktPlugin.vectorLayer.addFeatures([feature]);

            }
        }
    }
}

var selectGeometry = function (index){
//TODO MODIFY SOLO IN EDIT
    if(selGeom){
         wktPlugin.selectControl.unhighlight(selGeom);
         wktPlugin.modifyControl.unselectFeature(selGeom);

    }

    selGeom = wktPlugin.vectorLayer.features[index];
    wktPlugin.modifyControl.selectFeature(selGeom);
    wktPlugin.selectControl.highlight(selGeom);

}

var newWKTGeometry = function(geometry) {
    if(geometry.fid==null){
        newGeom = geometry;
        datagrid_add_row(${fieldname}_datatable, '${fieldname}', openUrl);
    }
};  

var updateWKTGeometry = function(evt) {
    var geom = evt.feature;
    updateDatagridGeom(geom.geometry.toString(),'${fieldname}',geom.fid);
};


//Setta il campo geometria di un datagrid (per ora faccio che il campo geometria Ã¨ sempre l'ultimo)
function updateDatagridGeom(value,datagridField,row){

console.log(value); return;
    var field = jq('#' + datagridField + '_gridvalue');
    var field_data = jq.evalJSON(field.val());
    var gridRow = field_data[row];
    gridRow[gridRow.length-1] = value;
    field_data[row] = gridRow;
    field.val(jq.toJSON(field_data));
}


">
        </script>
		
                           
        
   <input type='hidden' tal:attributes="id string:${fieldname}_gridvalue;
                                     name fieldname;
                                     value data"/>

   <input type='hidden' tal:attributes="id string:${fieldname}_mapsettings;
                                     name string:${fieldname}_mapsettings;"/>         
        
        <h4>
            <span tal:content="title">Titolo</span>
            <i tal:condition="ttip_title" class="icon-info-sign" tal:attributes="title ttip_title;data-content ttip_descr"></i>
        </h4>                         
                           
        <iframe tal:attributes="src string:${baseURL}/${custom_attributes}&mapconfig=pippo&editpoint=1&editpolygon=1&editline=1&treepanel=1;" width="100%" height="500"></iframe>
                           
        <table class="display" tal:attributes="id string:${fieldname}_datagrid">
        </table>
        <div tal:attributes="id string:${fieldname}_editform"></div>
        <p><a class="context edit-row"
            tal:attributes="id string:${fieldname}_editrow;
                            href string:../${associated_form}/OpenBareForm?Plomino_Parent_Field=${fieldname}&Plomino_Parent_Form=${formname};
        					onclick string:return false;
                            style python:{0: 'display:none'}.get(len(v), '')"
            tal:content="python:options['field'].getSettings().getActionLabel('edit')"
            >Edit row</a>
            <a href="javascript:void(0)" class="context delete-row"
            tal:attributes="id string:${fieldname}_deleterow;
                            onclick string:return false;
                            style python:{0: 'display:none'}.get(len(v), '')" 
            tal:content="python:options['field'].getSettings().getActionLabel('delete')"
            >Delete row</a>
        </p>
                   
                           
</tal:block>