<tal:def tal:define="
    portal_state context/@@plone_portal_state;
    portal_url portal_state/portal_url;
    title python:options['field'].title;
    ttip_title title;
    ttip_descr python:options['field'].Schema()['FieldDescription'].getAccessor(options['field'])();   
    custom_attributes python:options['field'].Schema()['customAttributes'].getAccessor(options['field'])();
    id options/fieldname;
    v options/fieldvalue;
    doc python: context.REQUEST.PARENTS[0];
    baseURL python: context.getParentDatabase().absolute_url();
    editMode python:1 if not doc.isDocument() or doc.isEditMode() else 0;
    fieldname options/fieldname;
    db python:context.getParentDatabase();
    associated_form python: options['field'].getSettings().associated_form;
    frm python:db.getForm(associated_form);
    field python: options['field'];
    k python: field.getSettings(key='field_mapping').split(',');">        
        
    <label tal:condition="python:title!=':'"  class="control-label"><span tal:content="python:'%s: ' % title">Titolo</span><span id="gMapMessage"></span>
            <i tal:condition="ttip_descr" class="icon-info-sign" data-fade-speed="10" data-trigger="hover" tal:attributes="title ttip_title;data-content ttip_descr"></i>
        </label>
                           
        <!--MAPPA--> 
        <div tal:attributes="
            id fieldname;
            data-base-url baseURL;
            data-edit-mode editMode;
            data-value v;
            class string: googlemap-plugin;
            data-plugin-options custom_attributes;"></div>
                           
                           
    <script 
        type="text/javascript"
        charset="utf-8"
        tal:define="param python:field.getSettings().getParameters();
                    data v/rawdata;"
            tal:content="structure string:   
        $$(document).ready(function() {

            var options = {${param}};
            var rawData = ${data};
            var overlays = [];
            var overlay;
            var geomIndex,typeIndex; 
            $$.each(rawData,function(index,aData){
                if(typeof(options.geomIndex) == 'undefined') geomIndex = aData.length-1; else geomIndex = options.geomIndex;
                if(typeof(options.typeIndex) == 'undefined') typeIndex = aData.length-2; else typeIndex = options.typeIndex;
                var geom = aData[geomIndex];
                var elementType = aData[typeIndex];//chiave del tipo di elemento 
                var v;
                if(geom){
                   v = geom.split(';');
                   if(v[0] == google.maps.drawing.OverlayType.POLYLINE){
                      overlay = new google.maps.Polyline(options.drawingOptions[elementType].polylineOptions||{});
                      overlay.setPath(google.maps.geometry.encoding.decodePath(v[1]))
                      overlay.geometryType = google.maps.drawing.OverlayType.POLYLINE;
                   }
                   else if(v[0] == google.maps.drawing.OverlayType.POLYGON){
                      overlay = new google.maps.Polygon(options.drawingOptions[elementType].polygonOptions||{});
                      overlay.setPath(google.maps.geometry.encoding.decodePath(v[1]))
                      overlay.geometryType = google.maps.drawing.OverlayType.POLYGON;
                   }
                   else{ 
                      overlay = new google.maps.Marker(options.drawingOptions[elementType].markerOptions||{});
                      var pos = geom.split(' ');
                      overlay.setPosition(new google.maps.LatLng(pos[1],pos[0]))
                      overlay.geometryType = google.maps.drawing.OverlayType.MARKER;

                   }

                   overlay.setMap($$.plominoMaps.google.map);
                   overlays[index] = overlay;
                   //console.log('inserito da archivio');
                }

                           //SUI MARKER AGGIUNGO LO ZOOM SU STREETVIEW
                           if(overlays[index].geometryType == google.maps.drawing.OverlayType.MARKER)
                                 google.maps.event.addListener(overlays[index],'click', function(){
                                       $$.plominoMaps.zoomStreetView(overlays[index].getPosition())
                                 })
      });

    $$('.zoomOverlay').bind('click',function(e){
        e.preventDefault();
        var index = $$(this).attr('index');

        //RESET SELECTIONS
        $$.each(overlays,function(index,overlay){
            if(overlay.geometryType == google.maps.drawing.OverlayType.MARKER){
                if(overlay.tmpIcon) overlay.setIcon(overlay.tmpIcon);
            }
            else{
                if(overlay.tmpColor) overlay.setOptions({'strokeColor':overlay.tmpColor});
            }
        });

        overlay = overlays[index];
        if(overlay.geometryType == google.maps.drawing.OverlayType.MARKER){
            overlay.tmpIcon = overlay.getIcon();
            overlay.setIcon('resources/icons/selezionato.png');
            overlay.map.setCenter(overlay.getPosition());
            overlay.map.setZoom(18);
            overlay.map.infowindow.setContent('todo:inserire info del cantiere...');
            overlay.map.infowindow.setPosition(overlay.getPosition());  
            overlay.map.infowindow.open(overlay.map)
        }
        else{
            overlay.tmpColor = overlay.strokeColor;
            overlay.setOptions({'strokeColor':'#FFFF00'});
            var bounds = overlay.getBounds();
            overlay.map.fitBounds(bounds);
            overlay.map.infowindow.setContent('todo:inserire info dello scavo...');
            overlay.map.infowindow.setPosition(bounds.getCenter());  
            overlay.map.infowindow.open(overlay.map);
        }                                    

   });



});
                           
      ">
    </script>   

        <p></p>
     <tal:rep tal:repeat="vv v/rawdata">
      <div class="well"> 
          <a href="#" class="pull-right zoomOverlay" tal:attributes="index repeat/vv/index" style="margin-top:-20px;width:100px;">
            <i class="icon-zoom-in"></i> Zoom oggetto
        </a>
        <tal:d tal:define="dummy python:map(context.REQUEST.set,k, vv);
                           cont python:frm.displayDocument(None, editmode=False, creation=False, request=context.REQUEST);">
            <div tal:content="structure cont"/>
        </tal:d>
    </div>   
    </tal:rep>                           
                           
                           
        
</tal:def>